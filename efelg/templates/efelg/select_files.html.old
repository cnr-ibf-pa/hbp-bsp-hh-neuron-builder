{% load staticfiles %}

<!DOCTYPE html>
<html>
    <head>
        <script type="text/javascript" src="{% static 'plotly-latest.min.js' %}"></script>
        <title>Feature extraction GUIs: file selection</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width">

        <style>
            label {
                position:relative;
                cursor:pointer;
            }
            
            label [type="checkbox"] {
                display:none; /* use your custom sprites instead as background on the span */
            }
            [type="checkbox"] + span {
                display:inline-block;
                padding:0.em;
                background:#e0e0eb;
            }
            :checked + span {
                background:#4d94ff;
            }
            [type="checkbox"][disabled] + span {
                background:#c2c2d6;
            }
        </style>

        {# Bower Dependencies #}
        <link rel="stylesheet" href="{% static 'hbp-collaboratory-theme/dist/css/bootstrap.min.css' %}">
    </head>
    <body>
        <div class="panel panel-info" width=100% id="input-groups">
            <div class="panel-heading"><h3>Upload and/or select the trace file(s) for feature extraction</h3></div>
        </div>
        <br>
        <form id="select_files_form" action="/select_traces/" method="post">
            <div class="panel panel-success" id="input-groups">
                <div class="panel-heading">Upload your own file(s) and then select them from the lists below</div>
                <div class=panel-footer>
                    <label>*Cell keywords:</label>
                    <br><br>
                    Brain region
                    <select enabled>
                        <option value=CA1>CA1</option>
                    </select>
                    - Cell type 
                    <select enabled>
                        <option value=interneurons>Interneurons</option>
                        <option value=principal_cells>Principal cells</option>
                    </select>
                    - Firing type
                    <select enabled>
                        <option value=bAC>bAC</option>
                        <option value=cAC selected="selected">cAC</option>
                        <option value=cNAC>cNAC</option>
                    </select>
                    <br><br>Cell name: <input type="text" placeholder="Insert cell name" disabled>
                    <p class="help-block">* all fields are mandatory</p>
                </div>
                <div class="panel-footer">
                    <label>Upload files:</label>
                    <input type="file" class="btn" id="upload_button" multiple disabled>
                </div>
            </div>
            <br>


            {% for cell_type,file in file_dict.items %}
            <div class="panel panel-success" id="input-groups">
                <div class="panel-heading">Select from cell type: {{cell_type}} [click on file name(s) to select]</div>
                <br>
                <input  id='checkboxid' type="checkbox" name='check_files' value={{cell_type}} onclick="togglecheckboxes(this, 'checkboxclass')"> Select/deselect all
                <br><br>
                {% for crr_file in file %}
                <div style="display:inline-block;">
                    <div style="margin:auto;">
                        <label>
                            {% with cell_type|add:crr_file as full_file  %}
                            <input  class='checkboxclass' type="checkbox" id={{file}}  name={{crr_file}} value={{full_file}}>
                            {% endwith %}
                            <span>{{crr_file|slice:"1:"}} <br> ({{cell_type}})</span>
                        </label>
                    </div>
                    <div id={{crr_file}} style="width:350px;height:350px;"></div>
                </div>
                {% endfor %}
            </div>



        </div>
    </div>
    <script>
        var my_dict = {{ file_plots|safe }};
        var layout = {
            xaxis: {range: [0, 5000]},
            yaxis: {range: [-130, 50]},
            showlegend : false,
            margin: {l: 40, b: 70, t: 3},
        };

        for (var key in my_dict){
            var y =[];
            if (my_dict.hasOwnProperty(key)){
                TESTER = document.getElementById(key);
                var crr_data = my_dict[key];
                for (i=0; i<crr_data.length; i++){
                    y.push({y: crr_data[i]});
                }
                //Plotly.plot(TESTER, y, {margin: {t: 0}}, layout=layout);
                Plotly.newPlot(key, y, layout, {showLink: false});
                //document.querySelector('[data-title="Autoscale"]').click();
            }
        }
    </script>
    <br>
    {% endfor %}
</div>
<!--{{selected_files}}-->
<input id="submit_button" type="submit" class="btn btn-primary" value="Select individual traces" onclick="myFunction()";>
<br><br>

{# Bower Dependencies #}
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js"></script>
<!--<script type="text/javascript" src="{% static 'angular/angular.min.js' %}"></script>--> 
<script type="text/javascript" src="{% static 'jquery/dist/jquery.min.js' %}"></script>
<script type="text/javascript" src="{% static 'lodash/dist/lodash.min.js' %}"></script>
<script type='text/javascript' src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.14.3/ui-bootstrap.min.js"></script>
<script type="text/javascript" src="{% static 'angular-bootstrap/ui-bootstrap-tpls.min.js' %}"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<!--<script>
    function selectAllCheckbox(checkbox_id, class_name){
    var select_all = document.getElementById(checkbox_id); //select all checkbox
    var checkboxes = document.getElementsByClassName(class_name); //checkbox items

    //select all checkboxes
    select_all.addEventListener("change", function(e){
    for (i = 0; i < checkboxes.length; i++) {
    checkboxes[i].checked = select_all.checked;
    }
    });


    for (var i = 0; i < checkboxes.length; i++) {
    checkboxes[i].addEventListener('change', function(e){ //".checkbox" change
    //uncheck "select all", if one of the listed checkbox item is unchecked
    if(this.checked == false){
    select_all.checked = false;
    }
    //check "select all" if all checkbox items are checked
    if(document.querySelectorAll('.checkbox:checked').length == checkboxes.length){
    select_all.checked = true;
    }
    });
    }
    }
</script>
-->
<script>
    function togglecheckboxes(master,group){
        var cbarray = document.getElementsByClassName(group);
        for(var i = 0; i < cbarray.length; i++){
            var cb = document.getElementByName(cbarray[i].name);
            cb.checked = master.checked;
        }
    }
</script>
</body>
</html>
